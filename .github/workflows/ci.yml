name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  web-ci:
    name: Web CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Build
      run: npm run build

  python-ci:
    name: Python CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [api, worker]
    
    defaults:
      run:
        working-directory: apps/${{ matrix.component }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest
    
    - name: Run tests
      run: pytest -v

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [web-ci, python-ci]
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ledgerlift
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      minio:
        image: minio/minio:RELEASE.2024-05-28T17-19-04Z
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: --health-cmd "curl -f http://localhost:9000/minio/health/live" --health-interval 30s --health-timeout 20s --health-retries 3
        ports:
          - 9000:9000
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      working-directory: apps/api
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Run database migrations
      working-directory: apps/api
      env:
        DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/ledgerlift
      run: alembic upgrade head
    
    - name: Start API server
      working-directory: apps/api
      env:
        DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/ledgerlift
        S3_ENDPOINT: http://localhost:9000
        S3_BUCKET: ledger-lift
        AWS_ACCESS_KEY_ID: minioadmin
        AWS_SECRET_ACCESS_KEY: minioadmin
        AWS_REGION: us-east-1
        CORS_ORIGINS: http://localhost:3000
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
    
    - name: Setup MinIO bucket
      run: |
        curl -X PUT http://minioadmin:minioadmin@localhost:9000/ledger-lift
    
    - name: Install web dependencies
      working-directory: apps/web
      run: npm ci
    
    - name: Install Playwright browsers
      working-directory: apps/web
      run: npx playwright install --with-deps
    
    - name: Build web app
      working-directory: apps/web
      run: npm run build
    
    - name: Run Playwright tests
      working-directory: apps/web
      env:
        NEXT_PUBLIC_API_URL: http://localhost:8000
      run: npm run test:e2e
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: apps/web/playwright-report/
        retention-days: 30