name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  web-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: pnpm -w install
      
      - name: Lint web
        run: pnpm --filter web lint
      
      - name: Build web
        run: pnpm --filter web build

  python-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install API dependencies
        run: |
          cd apps/api
          pip install -e .
          pip install -e .[dev]
      
      - name: Install Worker dependencies
        run: |
          cd apps/worker
          pip install -e .
          pip install -e .[dev]
      
      - name: Install Extractors dependencies
        run: |
          cd packages/extractors
          pip install -e .
      
      - name: Run API tests
        run: |
          cd apps/api
          pytest tests/ -v
      
      - name: Run Worker tests
        run: |
          cd apps/worker
          pytest tests/ -v

  e2e:
    runs-on: ubuntu-latest
    needs: [web-ci, python-ci]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: pnpm -w install
      
      - name: Install Playwright browsers
        run: pnpm --filter web exec playwright install --with-deps
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          cd apps/api
          pip install -e .
          cd ../worker
          pip install -e .
          cd ../../packages/extractors
          pip install -e .
      
      - name: Start services
        run: |
          # Start PostgreSQL, MinIO, and LocalStack
          docker-compose up -d postgres minio localstack
          
          # Wait for services to be ready
          sleep 30
          
          # Start API in background
          cd apps/api
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          API_PID=$!
          
          # Start Web in background
          cd ../web
          pnpm dev &
          WEB_PID=$!
          
          # Wait for services to start
          sleep 10
          
          # Store PIDs for cleanup
          echo "API_PID=$API_PID" >> $GITHUB_ENV
          echo "WEB_PID=$WEB_PID" >> $GITHUB_ENV
      
      - name: Run E2E tests
        run: |
          cd apps/web
          pnpm test:e2e
      
      - name: Cleanup
        if: always()
        run: |
          # Kill background processes
          if [ ! -z "$API_PID" ]; then kill $API_PID; fi
          if [ ! -z "$WEB_PID" ]; then kill $WEB_PID; fi
          
          # Stop Docker services
          docker-compose down