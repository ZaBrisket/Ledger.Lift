name: Netlify Preview

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - '.github/workflows/netlify-preview.yml'

jobs:
  netlify-preview:
    name: Deploy Netlify Preview
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Install dependencies
      working-directory: apps/web
      run: npm ci
    
    - name: Build web app
      working-directory: apps/web
      run: npm run build
    
    - name: Deploy to Netlify Preview
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './apps/web/out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - PR #${{ github.event.pull_request.number }}"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 10
    
    - name: Comment PR with preview URL
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha,
            per_page: 1
          });
          
          if (deployments.length > 0) {
            const deployment = deployments[0];
            const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id
            });
            
            const successStatus = statuses.find(status => status.state === 'success');
            if (successStatus && successStatus.target_url) {
              const comment = `
              ## ðŸš€ Netlify Preview Deployed
              
              **Preview URL:** ${successStatus.target_url}
              
              Built from commit: \`${context.payload.pull_request.head.sha.substring(0, 7)}\`
              
              The preview will be updated automatically when you push new commits to this PR.
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          }